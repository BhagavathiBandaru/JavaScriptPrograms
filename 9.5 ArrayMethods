1.Array Include or not 

code:- 
"use strict";

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let inputString = "";
let currentLine = 0;

process.stdin.on("data", (inputStdin) => {
  inputString += inputStdin;
});

process.stdin.on("end", (_) => {
  inputString = inputString
    .trim()
    .split("\n")
    .map((str) => str.trim());

  main();
});

function readLine() {
  return inputString[currentLine++];
}

/* Please do not modify anything above this line */

function isValuePresent(myArray, val) {
  let result=myArray.includes(val);
  
  return result
}

/* Please do not modify anything below this line */

function main() {
  let myArray = JSON.parse(readLine().replace(/'/g, '"'));
  let val = JSON.parse(readLine().replace(/'/g, '"'));
  
  let isPresent = isValuePresent(myArray, val);
  
  console.log(isPresent);
}

input:[3, 4, 5]
      4 
output:-true 

***************************************************************
2.Find the index of the First Occurrence of the value 

"use strict";

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let inputString = "";
let currentLine = 0;

process.stdin.on("data", (inputStdin) => {
  inputString += inputStdin;
});

process.stdin.on("end", (_) => {
  inputString = inputString
    .trim()
    .split("\n")
    .map((str) => str.trim());

  main();
});

function readLine() {
  return inputString[currentLine++];
}

/* Please do not modify anything above this line */

function findFirstIndexOfValue(myArray, val) {
    let index=myArray.indexOf(val)
    return index
    
        
  /*
   * Write your code here and return the output.
   */
}

/* Please do not modify anything below this line */

function main() {
  let myArray = JSON.parse(readLine().replace(/'/g, '"'));
  let val = JSON.parse(readLine().replace(/'/g, '"'));
  
  let firstIndexOfVal = findFirstIndexOfValue(myArray, val);
  
  console.log(firstIndexOfVal);
}


***************************************************************
3.Find First String Occurrence of the string 

"use strict";

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let inputString = "";
let currentLine = 0;

process.stdin.on("data", (inputStdin) => {
  inputString += inputStdin;
});

process.stdin.on("end", (_) => {
  inputString = inputString
    .trim()
    .split("\n")
    .map((str) => str.trim());

  main();
});

function readLine() {
  return inputString[currentLine++];
}

/* Please do not modify anything above this line */

function findFirstStringOccurrence(myArray) {
    
    let resultItem = myArray.find(function (eachItem){
    if (typeof(eachItem)==="string"){
        return true
    }  
    else{
        return false;
    }

    });
    return resultItem
  /*
   * Write your code here and return the output.
   */
}

/* Please do not modify anything below this line */

function main() {
  let myArray = JSON.parse(readLine().replace(/'/g, '"'));
  
  let firstStringVal = findFirstStringOccurrence(myArray);
  console.log(firstStringVal);
}

input:-[23, 4.5, 'Asia', 7, 'Europe'] 
output:-Asia




***************************************************************
4.Add a value to the beginning of the Array 

"use strict";

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let inputString = "";
let currentLine = 0;

process.stdin.on("data", (inputStdin) => {
  inputString += inputStdin;
});

process.stdin.on("end", (_) => {
  inputString = inputString
    .trim()
    .split("\n")
    .map((str) => str.trim());

  main();
});

function readLine() {
  return inputString[currentLine++];
}

function main() {
  let myArray = JSON.parse(readLine().replace(/'/g, '"'));
  let val = JSON.parse(readLine().replace(/'/g, '"'));
  
  myArray.unshift(val);
  console.log(myArray);
  
 }

input:-['Responsive', 'Dynamic']
'Static'

output:-[ 'Static', 'Responsive', 'Dynamic' ]

***************************************************************
5.Concatenate Arrays 

"use strict";

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let inputString = "";
let currentLine = 0;

process.stdin.on("data", (inputStdin) => {
  inputString += inputStdin;
});

process.stdin.on("end", (_) => {
  inputString = inputString
    .trim()
    .split("\n")
    .map((str) => str.trim());

  main();
});

function readLine() {
  return inputString[currentLine++];
}

/* Please do not modify anything above this line */

function concatenateTwoArrays(firstArray, secondArray) {
    
    let newArray=firstArray.concat(secondArray)
    return newArray
   
    
  /*
   * Write your code here and return the output.
   */
}

/* Please do not modify anything below this line */

function main() {
  let firstArray = JSON.parse(readLine().replace(/'/g, '"'));
  let secondArray = JSON.parse(readLine().replace(/'/g, '"'));
  
  let combinedArray = concatenateTwoArrays(firstArray, secondArray);
  
  console.log(combinedArray);
}
input:-[1, 2]
['a', 'b']

output:- [ 1, 2, 'a', 'b' ]


***************************************************************
6.Remove First Value 

"use strict";

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let inputString = "";
let currentLine = 0;

process.stdin.on("data", (inputStdin) => {
  inputString += inputStdin;
});

process.stdin.on("end", (_) => {
  inputString = inputString
    .trim()
    .split("\n")
    .map((str) => str.trim());

  main();
});

function readLine() {
  return inputString[currentLine++];
}

function main() {
  let myArray = JSON.parse(readLine().replace(/'/g, '"'));
  
  /* Please do not modify anything above this line */
  let removedItem=myArray.shift();
  console.log(removedItem);
  console.log(myArray);
  
  /*
   * Write your code here and log the output.
   */ 
}





***************************************************************
7.Find index of last occurence  

"use strict";

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let inputString = "";
let currentLine = 0;

process.stdin.on("data", (inputStdin) => {
  inputString += inputStdin;
});

process.stdin.on("end", (_) => {
  inputString = inputString
    .trim()
    .split("\n")
    .map((str) => str.trim());

  main();
});

function readLine() {
  return inputString[currentLine++];
}

/* Please do not modify anything above this line */

function findLastOccurrenceOfVal(myArray, val) {
    let index=myArray.lastIndexOf(val);
    return  index
    
  /*
   * Write your code here and return the output.
   */
}

/* Please do not modify anything below this line */

function main() {
  let myArray = JSON.parse(readLine().replace(/'/g, '"'));
  let val = JSON.parse(readLine().replace(/'/g, '"'));
  
  let lastOccurrenceOfVal = findLastOccurrenceOfVal(myArray, val);
  
  console.log(lastOccurrenceOfVal);
}



***************************************************************
8.Sort array value

"use strict";

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let inputString = "";
let currentLine = 0;

process.stdin.on("data", (inputStdin) => {
  inputString += inputStdin;
});

process.stdin.on("end", (_) => {
  inputString = inputString
    .trim()
    .split("\n")
    .map((str) => str.trim());

  main();
});

function readLine() {
  return inputString[currentLine++];
}

/* Please do not modify anything above this line */

function sortArray(myArray) {
    
    let sortedItems=myArray.sort()
    return sortedItems
  /*
   * Write your code here and return the output.
   */
}

/* Please do not modify anything below this line */

function main() {
  let myArray = JSON.parse(readLine().replace(/'/g, '"'));
  
  let sortedArray = sortArray(myArray);
  
  console.log(sortedArray);
}


***************************************************************
9.Join Array Values

"use strict";

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let inputString = "";
let currentLine = 0;

process.stdin.on("data", (inputStdin) => {
  inputString += inputStdin;
});

process.stdin.on("end", (_) => {
  inputString = inputString
    .trim()
    .split("\n")
    .map((str) => str.trim());

  main();
});

function readLine() {
  return inputString[currentLine++];
}

/* Please do not modify anything above this line */

function joinArrayValues(myArray, separator) {
  let JoinedItems=myArray.join(separator);
  return JoinedItems;
  
  /*
   * Write your code here and return the output.
   */
}

/* Please do not modify anything below this line */

function main() {
  let myArray = JSON.parse(readLine().replace(/'/g, '"'));
  let separator =  readLine();
  
  let newString = joinArrayValues(myArray, separator);
  
  console.log(newString);
}


***************************************************************
10.Array slicing 
 
 "use strict";

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let inputString = "";
let currentLine = 0;

process.stdin.on("data", (inputStdin) => {
  inputString += inputStdin;
});

process.stdin.on("end", (_) => {
  inputString = inputString
    .trim()
    .split("\n")
    .map((str) => str.trim());

  main();
});

function readLine() {
  return inputString[currentLine++];
}

/* Please do not modify anything above this line */

function getSliceFromArray(myArray, startIndex, endIndex) {
  let slicedItems=myArray.slice(startIndex,endIndex);
  return slicedItems 
  
  /*
   * Write your code here and return the output.
   */
}

/* Please do not modify anything below this line */

function main() {
  let myArray = JSON.parse(readLine().replace(/'/g, '"'));
  let startIndex =  JSON.parse(readLine());
  let endIndex =  JSON.parse(readLine());
  
  let slicedArray = getSliceFromArray(myArray, startIndex, endIndex);
  
  console.log(slicedArray);
}

 
 
***************************************************************
11. Find index of first Boolean

"use strict";

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let inputString = "";
let currentLine = 0;

process.stdin.on("data", (inputStdin) => {
  inputString += inputStdin;
});

process.stdin.on("end", (_) => {
  inputString = inputString
    .trim()
    .split("\n")
    .map((str) => str.trim());

  main();
});

function readLine() {
  return inputString[currentLine++];
}

/* Please do not modify anything above this line */

function findFirstBooleanOccurrence(myArray) {
    let index=myArray.findIndex(function (eachItem){
    if (typeof(eachItem)==="boolean"){
        return true
    }
    else{
        return false
    }
});    
    return index;
}    
   
  /*
   * Write your code here and return the output.
   */

/* Please do not modify anything below this line */

function main() {
  let myArray = JSON.parse(readLine().replace(/'/g, '"'));
  
  let firstBooleanIndex = findFirstBooleanOccurrence(myArray);
  
  console.log(firstBooleanIndex);
}



***************************************************************
12.Replace Array Values

"use strict";

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let inputString = "";
let currentLine = 0;

process.stdin.on("data", (inputStdin) => {
  inputString += inputStdin;
});

process.stdin.on("end", (_) => {
  inputString = inputString
    .trim()
    .split("\n")
    .map((str) => str.trim());

  main();
});

function readLine() {
  return inputString[currentLine++];
}

function main() {
  let myArray = JSON.parse(readLine().replace(/'/g, '"'));
  let startIndex = parseInt(readLine());
  let deleteCount = parseInt(readLine());
  let firstVal = JSON.parse(readLine().replace(/'/g, '"'));
  let secondVal = JSON.parse(readLine().replace(/'/g, '"'));
  
  /* Please do not modify anything above this line */
 
 
 let newArray=myArray.splice(startIndex,deleteCount,firstVal,secondVal);
 //console.log(newArray);
  console.log(myArray)
  /*
   * Write your code here and log the output.
   */ 
  
}






 
 
